{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","setSelectedGoods","good","setState","prevState","includes","filter","prevGood","clearSelectedGood","e","clearSelectedGoods","createTitle","goodsArr","length","join","slice","this","className","type","onClick","map","isSelected","buttonText","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,iBAAmB,SAACC,GAClB,IAAQF,EAAkB,EAAKD,MAAvBC,cAER,EAAKG,UAAU,SAACC,GACd,OAAIJ,EAAcK,SAASH,GAClB,CACLF,cAAeI,EAAUJ,cACtBM,QAAO,SAAAC,GAAQ,OAAIA,IAAaL,MAIhC,CAAEF,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,S,EAIzDM,kBAAoB,SAACN,GACnB,EAAKC,UAAU,SAAAC,GAAS,MAAK,CAC3BJ,cAAe,YAAII,EAAUJ,eAAeM,QAAO,SAAAG,GAAC,OAAIA,IAAMP,U,EAKlEQ,mBAAqB,WACnB,EAAKP,SAAS,CAAEH,cAAe,M,EAGjCW,YAAc,SAACC,GACb,IAAQC,EAAWD,EAAXC,OAER,OAAQA,GACN,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUD,EAAS,GAAnB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAASE,KAAK,SAAxB,iBACF,QACE,MAAM,GAAN,OAAUF,EAASG,MAAM,GAAI,GAAGD,KAAK,MAArC,gBAAkDF,EAASC,EAAS,GAApE,mB,4CAIN,WAAU,IAAD,OACCb,EAAkBgB,KAAKjB,MAAvBC,cAER,OACE,sBAAKiB,UAAU,wCAAf,UAME,sBAAKA,UAAU,2CAAf,UACE,oBAAIA,UAAU,iDAAd,SAKGD,KAAKL,YAAYX,KAEnBA,EAAca,OAAS,GACtB,wBACEK,KAAK,SACLD,UAAU,6BACVE,QAASH,KAAKN,mBAHhB,sBAUJ,oBAAIO,UAAU,OAAd,SACGpB,EAAgBuB,KAAI,SAAAlB,GACnB,IAAMmB,EAAarB,EAAcK,SAASH,GACpCoB,EAAaD,EAAa,SAAW,SAE3C,OACE,qBAEEJ,UAAU,yEAFZ,UAQE,+BAAOf,IACP,wBACEgB,KAAK,SACLD,UAAU,2BACVE,QAAS,WACP,OAAOE,EACH,EAAKb,kBAAkBN,GACvB,EAAKD,iBAAiBC,IAN9B,SASGoB,MAjBEpB,e,GAlFHqB,IAAMC,WA8GT1B,IC/Hf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.510f3449.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  setSelectedGoods = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState(((prevState: State) => {\n      if (selectedGoods.includes(good)) {\n        return {\n          selectedGoods: prevState.selectedGoods\n            .filter(prevGood => prevGood !== good),\n        };\n      }\n\n      return { selectedGoods: [...prevState.selectedGoods, good] };\n    }));\n  };\n\n  clearSelectedGood = (good: string) => {\n    this.setState((prevState => ({\n      selectedGoods: [...prevState.selectedGoods].filter(e => e !== good),\n    }\n    )));\n  };\n\n  clearSelectedGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  createTitle = (goodsArr: string[]) => {\n    const { length } = goodsArr;\n\n    switch (length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${goodsArr[0]} is selected`;\n      case 2:\n        return `${goodsArr.join(' and ')} are selected`;\n      default:\n        return `${goodsArr.slice(0, -1).join(', ')} and ${goodsArr[length - 1]} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\n        box\n        has-background-dark\n        px-6\n        py-6\"\n      >\n        <div className=\"is-flex is-justify-content-space-between\">\n          <h1 className=\"title\n            is-2\n            has-text-white\n            has-text-weight-bold\"\n          >\n            {this.createTitle(selectedGoods)}\n          </h1>\n          {selectedGoods.length > 0 && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-medium\"\n              onClick={this.clearSelectedGoods}\n            >\n              Clear\n            </button>\n          )}\n        </div>\n\n        <ul className=\"mt-5\">\n          {goodsFromServer.map(good => {\n            const isSelected = selectedGoods.includes(good);\n            const buttonText = isSelected ? 'Remove' : 'Select';\n\n            return (\n              <li\n                key={good}\n                className=\"is-flex\n                  is-justify-content-space-between\n                  has-text-white\n                  my-4\n                  is-size-3\"\n              >\n                <span>{good}</span>\n                <button\n                  type=\"button\"\n                  className=\"button is-info is-medium\"\n                  onClick={() => {\n                    return isSelected\n                      ? this.clearSelectedGood(good)\n                      : this.setSelectedGoods(good);\n                  }}\n                >\n                  {buttonText}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}